<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<interceptors>
		<beans:bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor"/>
	</interceptors>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="name.dimasik.dev.web.portalanalyzer" />
	
	<!-- ORM -->
	<beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/portal_analyzer_db"></beans:property>
	</beans:bean>
	
	<beans:bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">false</beans:prop>
				<beans:prop key="hibernate.connection.characterEncoding">UTF-8</beans:prop>
				<beans:prop key="hibernate.connection.useUnicode">true</beans:prop>
			</beans:props>
		</beans:property>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>name.dimasik.dev.web.portalanalyzer.checklink.PersistentCheckedLink</beans:value>
				<beans:value>name.dimasik.dev.web.portalanalyzer.checklink.PersistentLinksCheck</beans:value>
				<beans:value>name.dimasik.dev.web.portalanalyzer.search.PersistentQueryObject</beans:value>
				<beans:value>name.dimasik.dev.web.portalanalyzer.userinfo.PersistentUserInfo</beans:value>
				<beans:value>name.dimasik.dev.web.portalanalyzer.settings.Setting</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernateSessionFactory"></beans:property>
	</beans:bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
</beans:beans>
